<?php

namespace App\Controller;

class UserController extends AppController
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->loadComponent('RAWS');
        $this->loadComponent('TOOL');
        $this->loadModel('Reset');
        $this->loadModel('Patron');
        $this->loadModel('Inquiries');
        $this->loadModel('Reason');
        $this->loadModel('Photos');
        $this->loadModel('Events');

    }

    public  function  update(){
        if ($this->request->is('post')) {
            try {
                $patron = $this->request->getData('');
            } catch (Exception $e){
                
            }
        }
    }

    public  function  passchange(){}

    public  function  index(){}

    public  function  mailchange(){}

    public  function  idchange(){}

    public function upload(){
        //$mailer = new EmailMailer();

        //$mailer->resend('oic.k.koyama@gmail.com','kusamochi2','44444444','test');
    }

    public function uploadlogic(){
        $this->autoRender = false;

        $typeList = array('jpg','jpeg','gif','png');
        if(!empty($_FILES)){
            for($i = 0;$i < count($_FILES['upfile']['tmp_name']);$i++){
                if(is_uploaded_file($_FILES['upfile']['tmp_name'][$i])){
                    $name = $_FILES['upfile']['name'][$i];
                    $filePath = $_FILES['upfile']['tmp_name'][$i];

                    $fileTypes = pathinfo($name);

                    // ファイル名がアルファベットのみかをチェック
                    if ( preg_match("/^([a-zA-Z0-9\.\-\_])+$/ui", $name) == "0" ) {
                        // アルファベット以外を含む場合はファイル名を日時とする
                        $saveFileName = date("Ymd_His", time());
                    } else {
                        if ( preg_match("/\.jpg$/ui", $name) == true ) {
                        $ret = explode('.jpg', $name);
                        } elseif ( preg_match("/\.gif$/ui", $name) == true ) {
                            $ret = explode('.gif', $name);
                        } elseif ( preg_match("/\.png$/ui", $name) == true ) {
                            $ret = explode('.png', $name);
                        }
                        $saveFileName = $ret[0]; // 拡張子を除いたそのまま
                    }

                    $saveFileName = @('['.(microtime()*1000000).']'.$saveFileName);

                    if(in_array($fileTypes['extension'],$typeList)){
                        //アップロード処理
                        $this->RAWS->AuthUpload($saveFileName .".". $fileTypes['extension'],$filePath);

                        $this->redirect($this->referer());
                    }
                    else{
                        //ファイル種類外処理
                    }
                }
            }
        }
    }

    public function inquiry(){

    }

    public function userInformation()
    {

    }


    public function resetCheck()
    {
        $this->autoRender = false;
        $this->request->getQuery('check');
        $this->request->getQuery('id');

        //親情報の有無
        $Reset = $this->Reset->find()
            ->select(['Reset.patron_number','Reset.uuid'])
            ->where(['Reset.uuid' => $this->request->getQuery('check')])
            ->first();

        if(!empty($Reset)) {

            $this->Reset->query()
                ->delete()
                ->where(['Reset.uuid' => $this->request->getQuery('check')])
                ->execute();

            //resetpage
            $this->redirect([ 'controller' => 'User','action' => 'reset']);
        }else{
            //error
            //$this->redirect([ 'controller' => 'Login','action' => 'login']);
        }
    }

    public function reset(){
        //パスワード変更処理｢枝松｣
    }

    public function inquiryResponseList()
    {
        //保護者の送信した問い合わせが管理者に対応されたかどうか確認する画面 徳山
        $query = $this->Inquiries->find()
            ->select(['Inquiries.already','Inquiries.created'])
            //セッションIDからログインしている親のIDを取得
            ->matching('Reason', function ($q) {
                $q->select(['Reason.id','Reason.detail']);
                return $q;
            })
            ->matching('Photos',function ($q){
                $q->select(['Photos.id','Photos.path'])
                    ->where(['Photos.deleted'=> 0]);
                return $q;
            })
            ->matching('Photos.Events',function ($q){
                $q->select(['Events.id','Events.event']);
                return $q;
            })
            ->where(['Inquiries.patron_number' => $this->TOOL->loadSessionId()])
            ->order(['Inquiries.already' => 'ASC','Inquiries.created'=>'DESC']);
        $this->set('inquiries', $query->toArray());
    }
}
